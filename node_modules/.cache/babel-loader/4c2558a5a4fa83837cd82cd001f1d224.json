{"ast":null,"code":"var _jsxFileName = \"/home/empawebadmin/empaweb/frontend/src/components/Dropdown/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n  document.addEventListener(\"mousedown\", e => {\n    // user click toggle\n    if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n      content_ref.current.classList.toggle(\"active\");\n    } else {\n      // user click outside toggle and content\n      if (content_ref.current && !content_ref.current.contains(e.target)) {\n        content_ref.current.classList.remove(\"active\");\n      }\n    }\n  });\n};\n\nconst Dropdown = props => {\n  _s();\n\n  const dropdown_toggle_el = useRef(null);\n  const dropdown_content_el = useRef(null);\n  clickOutsideRef(dropdown_content_el, dropdown_toggle_el);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: dropdown_toggle_el,\n      className: \"dropdown__toggle\",\n      children: [props.icon ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 23\n      }, this) : \"\", props.badge ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"dropdown__toggle-badge\",\n        children: props.badge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : \"\", props.customToggle ? props.customToggle() : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropdown_content_el,\n      className: \"dropdown__content\",\n      children: [props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : \"\", props.renderFooter ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__footer\",\n        children: props.renderFooter()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropdown, \"9meCYIWWATC8BqD162kgmN/SNsA=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/home/empawebadmin/empaweb/frontend/src/components/Dropdown/index.js"],"names":["React","useRef","clickOutsideRef","content_ref","toggle_ref","document","addEventListener","e","current","contains","target","classList","toggle","remove","Dropdown","props","dropdown_toggle_el","dropdown_content_el","icon","badge","customToggle","contentData","renderItems","map","item","index","renderFooter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AAEA,OAAO,cAAP;;;AAEA,MAAMC,eAAe,GAAG,CAACC,WAAD,EAAcC,UAAd,KAA6B;AACnDC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAwCC,CAAD,IAAO;AAC5C;AACA,QAAIH,UAAU,CAACI,OAAX,IAAsBJ,UAAU,CAACI,OAAX,CAAmBC,QAAnB,CAA4BF,CAAC,CAACG,MAA9B,CAA1B,EAAiE;AAC/DP,MAAAA,WAAW,CAACK,OAAZ,CAAoBG,SAApB,CAA8BC,MAA9B,CAAqC,QAArC;AACD,KAFD,MAEO;AACL;AACA,UAAIT,WAAW,CAACK,OAAZ,IAAuB,CAACL,WAAW,CAACK,OAAZ,CAAoBC,QAApB,CAA6BF,CAAC,CAACG,MAA/B,CAA5B,EAAoE;AAClEP,QAAAA,WAAW,CAACK,OAAZ,CAAoBG,SAApB,CAA8BE,MAA9B,CAAqC,QAArC;AACD;AACF;AACF,GAVD;AAWD,CAZD;;AAcA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,kBAAkB,GAAGf,MAAM,CAAC,IAAD,CAAjC;AACA,QAAMgB,mBAAmB,GAAGhB,MAAM,CAAC,IAAD,CAAlC;AAEAC,EAAAA,eAAe,CAACe,mBAAD,EAAsBD,kBAAtB,CAAf;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAQ,MAAA,GAAG,EAAEA,kBAAb;AAAiC,MAAA,SAAS,EAAC,kBAA3C;AAAA,iBACGD,KAAK,CAACG,IAAN,gBAAa;AAAG,QAAA,SAAS,EAAEH,KAAK,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,cAAb,GAA8C,EADjD,EAEGH,KAAK,CAACI,KAAN,gBACC;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAA,kBAA0CJ,KAAK,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA,cADD,GAGC,EALJ,EAOGJ,KAAK,CAACK,YAAN,GAAqBL,KAAK,CAACK,YAAN,EAArB,GAA4C,EAP/C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAK,MAAA,GAAG,EAAEH,mBAAV;AAA+B,MAAA,SAAS,EAAC,mBAAzC;AAAA,iBACGF,KAAK,CAACM,WAAN,IAAqBN,KAAK,CAACO,WAA3B,GACGP,KAAK,CAACM,WAAN,CAAkBE,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KACpBV,KAAK,CAACO,WAAN,CAAkBE,IAAlB,EAAwBC,KAAxB,CADF,CADH,GAIG,EALN,EAMGV,KAAK,CAACW,YAAN,gBACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAmCX,KAAK,CAACW,YAAN;AAAnC;AAAA;AAAA;AAAA;AAAA,cADD,GAGC,EATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/BD;;GAAMZ,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst clickOutsideRef = (content_ref, toggle_ref) => {\r\n  document.addEventListener(\"mousedown\", (e) => {\r\n    // user click toggle\r\n    if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\r\n      content_ref.current.classList.toggle(\"active\");\r\n    } else {\r\n      // user click outside toggle and content\r\n      if (content_ref.current && !content_ref.current.contains(e.target)) {\r\n        content_ref.current.classList.remove(\"active\");\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nconst Dropdown = (props) => {\r\n  const dropdown_toggle_el = useRef(null);\r\n  const dropdown_content_el = useRef(null);\r\n\r\n  clickOutsideRef(dropdown_content_el, dropdown_toggle_el);\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\r\n        {props.icon ? <i className={props.icon}></i> : \"\"}\r\n        {props.badge ? (\r\n          <span className=\"dropdown__toggle-badge\">{props.badge}</span>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.customToggle ? props.customToggle() : \"\"}\r\n      </button>\r\n      <div ref={dropdown_content_el} className=\"dropdown__content\">\r\n        {props.contentData && props.renderItems\r\n          ? props.contentData.map((item, index) =>\r\n              props.renderItems(item, index)\r\n            )\r\n          : \"\"}\r\n        {props.renderFooter ? (\r\n          <div className=\"dropdown__footer\">{props.renderFooter()}</div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}